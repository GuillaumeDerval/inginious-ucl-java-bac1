accessible: true
author: Naitali Brandon
context: |+
    Les interfaces sont très utiles pour définir des actions à implémenter. Ici, nous allons les appliquer dans le jeu d'échecs. Ainsi, il vous est demandé dans cette tâche d'implémenter une classe PionStu. Celle-ci doit obligatoirement contenir les éléments suivants:

    .. code-block:: java


            String couleur;
            String nom;
            public PionStu(String couleur){
                this.couleur=couleur;
                this.nom="pion";
            }



    Celle-ci implémenterait l'interface ChessPiece:

    .. code-block:: java

        public interface ChessPiece {
            public int seDeplacer();
            public int estMangee(Object mangeur);
            public int mangePiece(Object victime);
            public String couleurPiece();
            public String nomPiece();
        }

    Bien entendu, nous ne vous demandons pas de coder le jeu d'échecs. Voici un ensemble de méthodes que vous pourrez utiliser pour implémenter l'interface:

    .. code-block:: java

        public class ChessAPI {
            // deplace le pion
            public static int deplacerPion(){
                // do something
            }
            // fait disparaitre la piece de l'échéquier
            public static int disparaitre(Object mangeur){
                // do something
            }
            // action de manger une autre piece par le pion
            public static int mangerPion(Object victime){
                // do something
            }
            //
            public static String nomPion(){
                return "pion";
            }
        }

environment: java7
groups: false
limits:
    memory: '100'
    time: '30'
    output: '2'
name: Jeu d'échec
network_grading: false
problems:
    q1:
        language: Java
        type: code
        name: Chess Interface
        header: ''
weight: 1.0
